/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/tutorial_java_projects.html
 */
 
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

plugins {

    // Apply the application plugin to add support for building an application
    id 'application'
    // Apply the project-report plugin to add reporting capabilities for dependency report etc.
    // Includes task like dependencyReport that can generate dependencies.txt file in build/reports/project
    id 'project-report'
}

// Define the main class for the application
mainClassName = 'presentation.LaunchApplication'

sourceSets {
    integrationTest {
        java {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            srcDir file('src/integration-test/java')
        }
    }
}

test {
    useJUnitPlatform()
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    //baseName = 'gs-consuming-rest'
    baseName = 'gs-rest-service'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'
    compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework:spring-web")
	compile 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
	compile("com.fasterxml.jackson.core:jackson-annotations:2.9.0")
    // Use JUnit5 test framework
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testImplementation group:'org.junit.jupiter', name: 'junit-jupiter-api', version:'5.3.1'
    testRuntimeOnly group:'org.junit.jupiter', name:'junit-jupiter-engine', version:'5.3.1'
    testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '3.0'
    testRuntime group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '3.0'
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest
